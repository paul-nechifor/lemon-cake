(= prog-bytes (byte-explode
  # elf64_ehdr
  :(1 0x7f 0x45 0x4c 0x46 2 1 1 0) # e_ident
  :(8 0)
  :(2 2)        # e_type
  :(2 0x3e)     # e_machine
  :(4 1)        # e_version
  :(8 0x4000b0) # e_entry
  :(8 0x40)     # e_phoff
  :(8 0xe0)     # e_shoff
  :(4 0)        # e_flags
  :(2 0x40)     # e_ehsize
  :(2 0x38)     # e_phentsize
  :(2 2)        # e_phnum
  :(2 0x40)     # e_shentsize
  :(2 4)        # e_shnum
  :(2 3)        # e_shstrndx

  # elf64_phdr
  :(4 1)           # p_type
  :(4 5)           # p_flags
  :(8 0)           # p_offset
  :(8 0x400000)    # p_vaddr
  :(8 0x400000)    # p_paddr
  :(8 0xbc)        # p_filesz
  :(8 0xbc)        # p_memsz
  :(8 0x200000)    # p_align

  :(4 1)           # p_type
  :(4 6)           # p_flags
  :(8 0xbc)        # p_offset
  :(8 0x6000bc)    # p_vaddr
  :(8 0x6000bc)    # p_paddr
  :(8 8)           # p_filesz
  :(8 8)           # p_memsz
  :(8 0x200000)    # p_align

  # .text
  :(1 0xb8 0x3c 0x00 0x00 0x00) # mov rax 60
  :(1 0xbf 0x2a 0x00 0x00 0x00) # mov rdi 42
  :(1 0x0f 0x05) # syscall

  # .data
  :(8 0x0102030405060708)

  # .shstrtab
  :(1 0)
  :(1 0x2e 0x73 0x68 0x73 0x74 0x72 0x74 0x61 0x62 0) # .shstrtab
  :(1 0x2e 0x74 0x65 0x78 0x74 0) # .text
  :(1 0x2e 0x64 0x61 0x74 0x61 0) # .data
  :(1 0 0 0 0 0) # padding

  # null section
  :(4 0) # sh_name
  :(4 0) # sh_type
  :(8 0) # sh_flags
  :(8 0) # sh_addr
  :(8 0) # sh_offset
  :(8 0) # sh_size
  :(4 0) # sh_link
  :(4 0) # sh_info
  :(8 0) # sh_addralign
  :(8 0) # sh_entsize

  # .text section
  :(4 0x0b) # sh_name
  :(4 1) # sh_type
  :(8 0x06) # sh_flags
  :(8 0x4000b0) # sh_addr
  :(8 0xb0) # sh_offset
  :(8 0x0c) # sh_size
  :(4 0) # sh_link
  :(4 0) # sh_info
  :(8 0x10) # sh_addralign
  :(8 0) # sh_entsize

  # .data section
  :(4 0x11) # sh_name
  :(4 1) # sh_type
  :(8 0x03) # sh_flags
  :(8 0x6000bc) # sh_addr
  :(8 0xbc) # sh_offset
  :(8 0x08) # sh_size
  :(4 0) # sh_link
  :(4 0) # sh_info
  :(8 4) # sh_addralign
  :(8 0) # sh_entsize

  # .shstrtab section
  :(4 0x01) # sh_name
  :(4 3) # sh_type
  :(8 0x00) # sh_flags
  :(8 0) # sh_addr
  :(8 0xc4) # sh_offset
  :(8 0x17) # sh_size
  :(4 0) # sh_link
  :(4 0) # sh_info
  :(8 1) # sh_addralign
  :(8 0) # sh_entsize
))
(= prog (apply cat (map prog-bytes chr)))
(fs-write 'tmp_test_dir/prg' prog)
(ccall (dynsym 'libc.so' 'system') 'chmod +x tmp_test_dir/prg; ./tmp_test_dir/prg; echo $?')
